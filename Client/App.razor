@inject NavigationManager NavigationManager

<MudThemeProvider Theme="CustomTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <Authorizing>
                    <div class="loader"></div>
                </Authorizing>
                <NotAuthorized>
                    @if (!context.User.Identity.IsAuthenticated)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <p>You need a connection to the server to access this resource.</p>
                        <br />
                        <p>If you are already connected to the server and read this, you are not authorized to access this resource.</p>
                        <br />
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Outlined.ElectricalServices" Color="Color.Warning" OnClick="@(() => GoToLogin())">Try to connect to the server</MudButton>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code{
    MudTheme CustomTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Primary = "#000000",
            Secondary = "#000000",
            AppbarBackground = "#00be9b"
        }
    };

    private void GoToLogin()
    {
        NavigationManager.NavigateTo("authentication/login");
    }
}