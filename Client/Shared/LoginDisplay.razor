@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject LocalStore LocalStore

<AuthorizeView>
    <Authorized>
        <div class="noselect nav-account">

            <MudMenu PositionAtCurser="false" Direction="Direction.Bottom" OffsetY="true" OffsetX="true">
                <ActivatorContent>
                    <MudAvatar Size="Size.Medium" Color="Color.Primary" Class="ma-2">@context.User.Email().Substring(0, 1).ToUpper()</MudAvatar>
                    @context.User.Email()
                    <MudIcon Icon="@Icons.Material.Filled.ArrowDropDown" />
                </ActivatorContent>
                <ChildContent>
                    <MudContainer>
                        @context.User.Email()
                    </MudContainer>

                    <MudMenuItem><button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button></MudMenuItem>
                </ChildContent>
            </MudMenu>

        </div>
    </Authorized>

    <NotAuthorized>
        <MudLink Href="authentication/register" Underline="Underline.None">Register</MudLink>
        <MudLink Href="authentication/login" Underline="Underline.None">Login</MudLink>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        await LocalStore.SaveUserAccountAsync(null);
        Navigation.NavigateTo("authentication/logout");
    }
}
