@inject NavigationManager NavigationManager

@inherits LayoutComponentBase

<div class="page">

    @*<AuthorizeView>
        <Authorized>*@
            <MudLayout>
                <MudAppBar Elevation="1" Dense="@dense">
                    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" @onclick="ToggleDrawer" />
                    <MudAppBarSpacer />
                    <MudDrawerContainer><LoginDisplay /></MudDrawerContainer>
                </MudAppBar>
                <MudDrawer @bind-Open="@open" ClipMode="clipMode" Elevation="1" Variant="@DrawerVariant.Responsive" Class="mudblazor-appbar-band">
                    <MudDrawerHeader>
                        <MudLink Href="/" Class="w-100"><MudCardMedia Image="images/brain.png" Height="75" Class="w-100" Style="background-size: contain;" /></MudLink>
                    </MudDrawerHeader>
                    <MudNavMenu>
                        <MudNavLink Href="/" Icon="@Icons.Filled.TableChart" Match="NavLinkMatch.All">Home</MudNavLink>
                        <MudNavLink Href="/course" Icon="@Icons.Filled.AutoStories" Match="NavLinkMatch.All">Courses</MudNavLink>
                        <MudNavLink Href="/test" Icon="@Icons.Filled.ListAlt" Match="NavLinkMatch.All">Tests</MudNavLink>
                        <MudNavLink Href="/question" Icon="@Icons.Filled.LiveHelp" Match="NavLinkMatch.All">Questions</MudNavLink>
                        <MudNavLink Href="/counter">Counter</MudNavLink>
                        <MudNavLink Href="/fetchdata">Weather Forecast</MudNavLink>
                    </MudNavMenu>
                </MudDrawer>
                <MudMainContent Class="main">
                    <MudContainer Class="content px-4">
                        @Body
                    </MudContainer>
                </MudMainContent>
            </MudLayout>
        @*</Authorized>*@

        @*<NotAuthorized>
            <div class="content px-4">
                @Body
            </div>
        </NotAuthorized>*@
    @*</AuthorizeView>*@
</div>

@code{
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        //if (!user.Identity.IsAuthenticated)
        //{
        //    NavigationManager.NavigateTo($"authentication/login");
        //}
    }

    bool open = true;
    bool dense = false;
    DrawerClipMode clipMode = DrawerClipMode.Never;

    void ToggleDrawer()
    {
        open = !open;
    }
}
